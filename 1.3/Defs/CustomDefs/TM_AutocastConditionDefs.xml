<?xml version="1.0" encoding="utf-8" ?>

<Defs>
	<!-- Notes
	Examples are shown in this document - do not use this document to add autocast conditions, create a unique .xml file for custom autocast conditions and 
	supporting defs to prevent them from being overwritten during mod updates
	These conditions are for entries into the <advancedConditions> <li>custom_autocast_defName</li> </advancedConditions> field within the custom power defs
	-->
	
		<TorannMagic.TM_AutocastConditionDef>							<!-- a simple condition check for any non-permanent injuries on the target -->
		    <defName>TM_NoHealthLost</defName>							<!-- defName is the key to add into the field in CustomPowerDefs -->
			<autocastCondition>
				<conditionClass>DamageTaken</conditionClass>			<!-- type of condition: DamageTaken, HasNeed, HasHediff, EnemiesInRange, AlliesInRange, TargetDrafted -->
				<hediffDefs></hediffDefs>									<!-- hediff defnames, null by default, accepts lists -->
				<needDefs></needDefs>										<!-- need defnames, null by default, could be used to check for magic user eg TM_Mana, accepts lists -->
				<valueA>0</valueA>										<!-- primary value used -->
				<valueB></valueB>										<!-- secondary value used for range determination in xInRange where A is # of enemies and B is range (radius) around target -->
				<valueC></valueC>										<!-- tertiary value, currently unused by any condition check -->
				<invert>true</invert>									<!-- inverts the result -->
			</autocastCondition>
		</TorannMagic.TM_AutocastConditionDef>
		
		<TorannMagic.TM_AutocastConditionDef>							<!-- a simple condition check for any non-permanent injuries on the target -->
		    <defName>TM_BelowMaxHealth</defName>						<!-- defName is the key to add into the field in CustomPowerDefs -->
			<autocastCondition>
				<conditionClass>DamageTaken</conditionClass>			<!-- type of condition: DamageTaken, HasNeed, HasHediff, EnemiesInRange, AlliesInRange, TargetDrafted -->
				<hediffDefs></hediffDefs>									<!-- hediff defname, null by default -->
				<needDefs></needDefs>										<!-- need defname, null by default, could be used to check for magic user eg TM_Mana -->
				<valueA>0</valueA>										<!-- primary value used -->
				<valueB></valueB>										<!-- secondary value used for range determination in xInRange where A is # of enemies and B is range (radius) around target -->
				<valueC></valueC>										<!-- tertiary value, currently unused by any condition check -->
				<invert>false</invert>									<!-- inverts the result -->
			</autocastCondition>
		</TorannMagic.TM_AutocastConditionDef>
		
		<TorannMagic.TM_AutocastConditionDef>							<!-- a condition check that looks for 3 enemies near the target - this will include the target enemy for target +2 -->
		    <defName>TM_3EnemiesWithin6Cells</defName>					<!-- defName is the key to add into the field in CustomPowerDefs -->
			<autocastCondition>
				<conditionClass>EnemiesInRange</conditionClass>			<!-- type of condition: DamageTaken, HasNeed, HasHediff, EnemiesInRange, AlliesInRange, TargetDrafted -->
				<hediffDefs></hediffDefs>									<!-- hediff defname, null by default -->
				<needDefs></needDefs>										<!-- need defname, null by default, could be used to check for magic user eg TM_Mana -->
				<valueA>3</valueA>										<!-- primary value used, in this case, number of enemies -->
				<valueB>6</valueB>										<!-- secondary value used for range determination in xInRange where A is # of enemies and B is range (radius) around target -->
				<valueC></valueC>										<!-- tertiary value, currently unused by any condition check -->
				<invert>false</invert>									<!-- inverts the result -->
			</autocastCondition>
		</TorannMagic.TM_AutocastConditionDef>
		
		<TorannMagic.TM_AutocastConditionDef>							<!-- a condition check that looks for any regenerate hediff on the target -->
		    <defName>TM_HasAnyRegenerateHediff</defName>					
			<autocastCondition>
				<conditionClass>HasHediff</conditionClass>				<!-- type of condition: DamageTaken, HasNeed, HasHediff, EnemiesInRange, AlliesInRange, TargetDrafted -->
				<hediffDefs>
					<li>TM_Regeneration</li>							<!-- hediff defnames, listed all hediff levels -->
					<li>TM_Regeneration_I</li>
					<li>TM_Regeneration_II</li>
					<li>TM_Regeneration_III</li>
				</hediffDefs>											
				<needDefs></needDefs>									
				<valueA></valueA>										<!-- no values needed since this is only a boolean check -->
				<valueB></valueB>										
				<valueC></valueC>										
				<invert>true</invert>									<!-- returns "true" if the target has any of the listed hediffs, need to invert to fail condition if a hediff is present -->
			</autocastCondition>
		</TorannMagic.TM_AutocastConditionDef>
		
		<TorannMagic.TM_AutocastConditionDef>							<!-- a condition check that looks for any regenerate hediff on the target -->
		    <defName>TM_TargetDrafted</defName>					
			<autocastCondition>
				<conditionClass>TargetDrafted</conditionClass>				<!-- type of condition: DamageTaken, HasNeed, HasHediff, EnemiesInRange, AlliesInRange, TargetDrafted -->
				<hediffDefs>
				</hediffDefs>											
				<needDefs></needDefs>									
				<valueA></valueA>										<!-- no values needed since this is only a boolean check -->
				<valueB></valueB>										
				<valueC></valueC>										
				<invert>false</invert>									<!-- returns "true" if the target has any of the listed hediffs, need to invert to fail condition if a hediff is present -->
			</autocastCondition>
		</TorannMagic.TM_AutocastConditionDef>
		
</Defs>